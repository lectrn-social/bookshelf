const crypto = require('crypto');

/**
 * Secure random integer generation
 * 
 * `max - min < 248`
 * 
 * @param {Number} min Inclusive minimum. Must be a safe integer.
 * @param {Number} max Exclusive maximum. Must be a safe integer.
 * @returns 
 */
function int(min, max) {
    return new Promise((resolve, reject) => {
        crypto.randomInt(min, max, (err, n) => {
            if (err) reject(err);
            else resolve(n);
        })
    })
}

/**
 * Secure random byte generation
 * 
 * @param {Number} size Number of bytes to generate. Must not exceed `2**31 - 1`.
 * @returns {Buffer} Generated bytes
 */
function bytes(size) {
    return new Promise((resolve, reject) => {
        crypto.randomBytes(size, (err, buf) => {
            if (err) reject(err);
            else resolve(buf);
        })
    })
}

module.exports = {
    int,
    bytes
}